---
layout: post
title: "Pentesting GreenOptic: 1"
date: 2020-3-27
---

Today, I will be writing up how I solved the <a href="https://www.vulnhub.com/entry/greenoptic-1,510/#">GreenOptic: 1</a> challenge from VulnHub. This was quite a difficult box to do as it led me down a bunch of rabbit-holes, but nonetheless, I was able to solve it. The challenge was designed to be realistic, and all of the things that I came across were things that could be found in a real environment.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image18.png" />

As soon as I downloaded the virtual machine and spun it up in <a href="https://www.virtualbox.org/">VirtualBox</a>, I immediately noticed that the target's hostname was "websrv01" and it was running CentOS Linux 7. I ran a ping scan in Nmap to find out that the IP address of the virtual machine was 192.168.56.19, and afterwards, I ran an aggressive SYN scan as well (shown below). Ports 21/tcp, 22/tcp, 53/tcp, 80/tcp, and 10000/tcp were open. I tried to login to the FTP server using the anonymous account, but it did not work.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image30.png" />

The webpage running on port 10000 intrigued me because it is typically not a port used for HTTP, so I went ahead and looked at it. There was a login page for <a href="http://www.webmin.com/">Webmin</a>, which is a web-based interface for Unix system administration.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image26.png" />

I tried to use all of the most obvious passwords (such as admin/admin, root/root, etc.), but after I typed in an incorrect password too many times, the server automatically blocked my IP address. This meant that brute forcing the webpage was not an option. Webmin 1.953 is the latest version of Webmin (at the time of writing this), and no known vulnerabilities existed in its environment. After trying a few more different things, I decided that this was probably not the best attack vector, and I moved on.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image22.png" />

There was another basic webpage running on port 80, so I decided to take a look at that as well. At first glance, it did not seem very interesting. However, using gobuster, I was able to brute force some hidden directories in the website, and I found a hidden login page at /account/.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image14.png" />

Once again, I tried to use the most obvious passwords, but I had no luck. I moved on and looked more into the website, where I found a directory listing under /img. In the directory listing, I saw two peculiar files: image.dd and testdisk.log. What was a log file and a disk image file doing in a directory filled with pictures?

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image37.png" />

I downloaded both the files. The `file image.dd` command indicated that image.dd was a BTRFS filesystem image, but I got an error when I tried to use btrfs to look at the file.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image13.png" />

I took a look at the testdisk.log file as well. This file was a log for a data recovery utility called TestDisk.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image29.png" />

I found <a href="https://www.cgsecurity.org/wiki/TestDisk">this</a> off of Google, which seemed to be the same program referenced in the log file, and I used it on the image file. 

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image24.png" />

I spent a few hours looking trying to use the TestDisk program to extract the files from the disk image file, but I had no luck. I tried to change every single setting, including the partition table type, the sector size, the number of cylinders, and the number of heads, but it appeared as though no matter what I did, I was unable to extract any useful information from the image file. As it turns out, this was a rabbit hole.

I backtracked a little bit and went back to the login page I found in the /account directory. I noticed that there was an "include" parameter in the URL, and modifying the value of this include parameter could change what was shown on the website. By travelling to http://192.168.56.19/account/index.php?include=../../../../../../../../etc/passwd, I was able to read the contents of /etc/passwd. Using this file, I discovered three new usernames: sam, terry, and alex.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image3.png" />

Suddenly, I had an idea: what if I tried to read the emails of the three users that I just found? Going to http://192.168.56.19/account/index.php?include=../../../../../../../../var/mail/terry allowed me to see terry's emails, which included the following password: wsllsa!2

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image9.png" />

Using the same idea, I was able to read sam's email as well from http://192.168.56.19/account/index.php?include=../../../../../../../../var/mail/sam. Sam's email included the following password: HelloSunshine123

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image6.png" />

I was unable to read alex's emails (or perhaps he didn't have any emails). I tried to use the usernames and passwords that I acquired in every login page that I saw earlier, but none of them worked. I couldn't read /etc/shadow using the LFI, even after I tried common tricks like putting a NULL byte at the end or base64 encoding it. I spun up a web server on my host machine and attempted to exploit an <a href="https://www.acunetix.com/blog/articles/remote-file-inclusion-rfi/">RFI vulnerability</a>, but I was also unsuccessful at doing this as the website only allowed local files to be included. Since that didn't work, I tried to see if I could use a <a href="https://www.idontplaydarts.com/2011/03/php-remote-file-inclusion-command-shell-using-data-stream/">data stream</a> to execute PHP code, but that also did not work. I even tried to send an email containing PHP code to terry and sam so that I could potentially read it using the LFI and gain code execution, but something was blocking my emails from being sent.

At this point, I was hours into doing this challenge, and I was hitting a wall. I wasn't getting anywhere, so I messaged the challenge writer on discord telling him what I've done so far, and he sent me this back:

```
Have you looked at the DNS server and tried enumerating subdomains? :)
```

Unfortunately, I had gotten so caught up with searching for vulnerabilities in the web servers that I had forgot to do some initial enumeration with the DNS server! Looking back, this was something incredibly obvious that I had missed, and there are no excuses for making such a basic enumeration mistake.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image33.png" />

After doing the zone transfer, I had to add greenoptic.vm, websrv01.greenoptic.vm, root.greenoptic.vm, ns1.greenoptic.vm, and recoveryplan.greenoptic.vm to my hosts file. When I travelled to http://greenoptic.vm, http://websrv01.greentoptic.vm, http://root.greenoptic.vm, and http://ns1.greenoptic.vm, I was greeted with the same website as I saw before. However, when I travelled to http://recoveryplan.greenoptic.vm, I saw something different.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image20.png" />

The website required credentials in order to view the webpage. Perhaps there was an .htpasswd file located somewhere?

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image38.png" />

Using the LFI vulnerability that I found earlier, I was able to see a password hash for a user named "staff" in /var/www/.htpasswd. This hash was easy to brute force using john.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image35.png" />

Using the username "staff" and the password "wheeler", I was able to access the webpage at http://recoveryplan.greenoptic.vm. This website contained a phpBB forum that allowed staff members to post information about their company.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image34.png" />

I clicked on the "Team Message" post made by terry. In his post, terry attached a file called "dpi.zip," which contained a password-protected PCAP file. I was able to extract the PCAP file by using a password found earlier: HelloSunshine123

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image11.png" />

I scrolled through the PCAP file in wireshark, and I eventually found cleartext FTP credentials for alex. His password was FewjAASD1.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image17.png" />

After logging into alex's FTP account, I found one file named "user.txt" in the current directory. This file did not contain any useful information aside from a motivational message that let me know that I was on the right track.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image1.png" />

I went back onto the website and registered a user named "notahacker" using the registration form. I had to use sam@websrv01.greenoptic.vm (which I saw earlier) as the email address because the email was required to be in the greenoptic.vm domain.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image5.png" />

After creating the account, I was able to create a new post on phpBB that was subtly titled "I'm definitely not a hacker. Just ignore this please." I included PHP code in the body of the post, thinking that it would allow me to gain code execution on the target machine.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image31.png" />

However, the website informed me that my post would not be uploaded until I had a moderator approve it.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image16.png" />

I logged into phpBB as terry using "wsllsa!2" as the password. Since terry was a moderator, I was able to approve the post that I had created. Unfortunately, this did not give me any code execution, and I ended up just deleting the page. I scoured the moderator's settings page, hoping that I could find some setting that could lead me to code execution. It took me a while to realize that I was wasting my time in another rabbit-hole; the FTP credentials that I found earlier also worked for SSH, which gave me a low-priv shell as alex!

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image41.png" />

I setup a web server on my host machine that allowed me to easily transfer files to the target machine using wget. After doing some digging and using a few enumeration scripts, I noticed that alex was part of the wireshark group.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image10.png" />

This was interesting to me, so I executed tshark (wireshark's command line equivalent) to look at the packets being sent.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image8.png" />

One of the messages in the packet capture contained "AHJvb3QAQVNmb2pvajJlb3p4Y3p6bWVkbG1lZEFTQVNES29qM28=", which was base64 decoded as "rootASfojoj2eozxczzmedlmedASASDKoj3o". Using "ASfojoj2eozxczzmedlmedASASDKoj3o" as the password for root allowed me to obtain root privileges.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image19.png" />

The next step was to cover the tracks that I had left while doing the pentest. I went into /var/mail/sam, and I deleted the email that indicated that I created an account on the web server using his email.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image7.png" />

I had used a few privilege escalation checkers while searching for attack vectors, so I had to delete those from /tmp.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image2.png" />

I had also tried using "sudo" several times while I was logged in as alex, which caused me to receive messages saying something along the lines of "alex is not in the sudoers group. This incident will be reported." I had to delete these incident reports from /var/mail/root.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image27.png" />

The last step was to make sure that I could retain access to the machine even if the root password was changed for some reason. I wanted to test out the <a href="https://github.com/nihaal-prasad/Basic-Linux-Backdoor">backdoor</a> that I recently created, so I transferred it to the target machine using wget. I also renamed the file from "backdoor\_server" to "updates" to make it seem less suspicious.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image32.png" />

I created a new service called /etc/systemd/system/update.service that would always execute /.update on boot.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image23.png" />

Finally, I was able to retain access to the target even if it was rebooted and the root user's password was changed.

<img style="margin-left: auto; margin-right: auto;" src="../../../assets/img/2020-7-21-pentesting-greenoptic-1/image25.png" />

{% include related_posts.html %}
